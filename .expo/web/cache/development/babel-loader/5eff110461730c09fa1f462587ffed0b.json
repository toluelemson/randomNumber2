{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _ApiStyles = _interopRequireDefault(require(\"./ApiStyles\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\reactNativeTest\\\\randomNumber2\\\\App\\\\Screens\\\\ApiView.js\";\n\nvar ApiView = function ApiView(props) {\n  var getRandom = props.getRandom,\n      fromAxios = props.fromAxios,\n      axiosData = props.axiosData,\n      _renderItem = props.renderItem,\n      FlatListItemSeparator = props.FlatListItemSeparator,\n      loading = props.loading;\n  return _react.default.createElement(_reactNative.View, {\n    style: _ApiStyles.default.parentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: _ApiStyles.default.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    }\n  }, \"The app has to fetch random numbers between 1 and 1000 from an API and display in the UI\")), _react.default.createElement(_reactNative.View, {\n    style: {\n      margin: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      margin: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    }\n  }, _react.default.createElement(_reactNative.Button, {\n    title: 'Get Random Number',\n    onPress: getRandom,\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    }\n  })), fromAxios && _react.default.createElement(_reactNative.FlatList, {\n    data: axiosData,\n    ItemSeparatorComponent: FlatListItemSeparator,\n    renderItem: function renderItem(item) {\n      return _renderItem(item);\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.random.toString();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    }\n  }), loading && _react.default.createElement(_reactNative.View, {\n    style: _ApiStyles.default.loader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    }\n  }, _react.default.createElement(_reactNative.ActivityIndicator, {\n    size: \"large\",\n    color: \"#0c9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: {\n      fontSize: 16,\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }, \"Loading Data...\")));\n};\n\nvar _default = ApiView;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/reactNativeTest/randomNumber2/App/Screens/ApiView.js"],"names":["ApiView","props","getRandom","fromAxios","axiosData","renderItem","FlatListItemSeparator","loading","styles","parentContainer","textStyle","margin","item","random","toString","loader","fontSize","color"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AACA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AAAA,MAErBC,SAFqB,GAQnBD,KARmB,CAErBC,SAFqB;AAAA,MAGrBC,SAHqB,GAQnBF,KARmB,CAGrBE,SAHqB;AAAA,MAIrBC,SAJqB,GAQnBH,KARmB,CAIrBG,SAJqB;AAAA,MAKrBC,WALqB,GAQnBJ,KARmB,CAKrBI,UALqB;AAAA,MAMrBC,qBANqB,GAQnBL,KARmB,CAMrBK,qBANqB;AAAA,MAOrBC,OAPqB,GAQnBN,KARmB,CAOrBM,OAPqB;AASvB,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,mBAAOC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAED,mBAAOE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gGADF,CADF,EAOE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAACA,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,mBAAD;AAAQ,IAAA,KAAK,EAAE,mBAAf;AAAoC,IAAA,OAAO,EAAET,SAA7C;AAAwD,IAAA,KAAK,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,EAYGC,SAAS,IACR,6BAAC,qBAAD;AACE,IAAA,IAAI,EAAEC,SADR;AAEE,IAAA,sBAAsB,EAAEE,qBAF1B;AAGE,IAAA,UAAU,EAAE,oBAAAM,IAAI;AAAA,aAAIP,WAAU,CAACO,IAAD,CAAd;AAAA,KAHlB;AAIE,IAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,aAAIA,IAAI,CAACC,MAAL,CAAYC,QAAZ,EAAJ;AAAA,KAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAqBGP,OAAO,IACN,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,mBAAOO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,8BAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CAtBJ,CADF;AA8BD,CAvCD;;eAwCejB,O","sourcesContent":["import React from 'react';\r\nimport {View, Text, Button, FlatList, ActivityIndicator} from 'react-native';\r\nimport styles from './ApiStyles';\r\nconst ApiView = props => {\r\n  const {\r\n    getRandom,\r\n    fromAxios,\r\n    axiosData,\r\n    renderItem,\r\n    FlatListItemSeparator,\r\n    loading,\r\n  } = props;\r\n  return (\r\n    <View style={styles.parentContainer}>\r\n      <View>\r\n        <Text style={styles.textStyle}>\r\n          The app has to fetch random numbers between 1 and 1000 from an API and\r\n          display in the UI\r\n        </Text>\r\n      </View>\r\n      <View style={{margin: 18}} />\r\n      <View style={{margin: 18}}>\r\n        <Button title={'Get Random Number'} onPress={getRandom} color=\"green\" />\r\n      </View>\r\n\r\n      {fromAxios && (\r\n        <FlatList\r\n          data={axiosData}\r\n          ItemSeparatorComponent={FlatListItemSeparator}\r\n          renderItem={item => renderItem(item)}\r\n          keyExtractor={item => item.random.toString()}\r\n        />\r\n      )}\r\n\r\n      {loading && (\r\n        <View style={styles.loader}>\r\n          <ActivityIndicator size=\"large\" color=\"#0c9\" />\r\n          <Text style={{fontSize: 16, color: 'red'}}>Loading Data...</Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\nexport default ApiView;\r\n"]},"metadata":{},"sourceType":"script"}